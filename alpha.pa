R PIP
ATOC.PA<TTY:
/-------------------------------------------------------
/       ALPHA
/       Read keyboard input and display the value in 
/	octal.
/-------------------------------------------------------

/--------------------Symbol Table
        MONADR=7600
	SPACE=0040
	CTLC=0003
	CR=0015
	LF=0012
	GT=0076

/--------------------Autoincrement buffer address
	AIBUF=0010
        
	*200
START,  CLA
	TLS			/Initialize Printer
	KCF
LOOP,	TAD     MSG		/Load a message
	JMS     PRINTB		/Print it
	KSF			/WAIT FOR INPUT
        JMP     .-1		/LOOP
        KRB			/READ KEYBOARD
        TAD     (-1^CTLC)	/ADD NEGATIVE ESC 6-BIT VALUE
        SNA			/SKIP NEXT IF NOT ESC
        JMP I   (MONADR)	/RETURN TO OS
        TAD     (CTLC)		/ Add Escape Character back
        JMS     ATOC		/CONVERT AND ASCII IN BUFF AT AC
        JMP     LOOP		/GET NEXT CHAR

MSG,    .;CR;LF;GT;SPACE;0 

/-------------------------------------------------------
/       PRINTB
/       NULL-TERMINATED BUFFER IN AC
/-------------------------------------------------------
PRINTB, 0
        DCA     AIBUF  /Set Pointer to AI Buff
NEXT,   TAD I	AIBUF
	SNA
	JMP I	PRINTB	/ Exit on zero
	TSF
	JMP	.-1
	TLS
	CLA
	JMP	NEXT

/-------------------------------------------------------
/	ACCUMULATOR TO ASCII
/	Prints the AC, and sets AC to zero on return
/-------------------------------------------------------
ATOC,   0
        DCA     VAR     /MOVE AC TO VAR
        TAD     VAR     /RESTORE THE AC
        RTL; RTL        /HIGH 3 BITS NOW LOW 3
        JMS     PROC    /PROCESS THE LOW 3
        BSW             /NEXT 3 TO LOW 3
        JMS     PROC	/PROCESS IT
        RTR; RAR        /NEXT 3
        JMS     PROC	/PROCESS IT
        JMS     PROC    /FINAL LOW 3
        CLA	        /CLEAR AC AND LINK
        JMP I	ATOC	/RETURN

// Convert the AC to ASCII, Print, clear AC, and restore it
PROC,   0
        AND     (0007)  /ISOLATE LOW 3 BITS
        TAD     ("0)	/ADD 260 TO MAKE ASCII
	TSF		/Print it
	JMP	.-1
	TLS    
	CLA
        TAD	VAR	/RESTORE AC
        JMP I	PROC	/RETURN

VAR,    0		/TEMP VAR TO HOLD AC

