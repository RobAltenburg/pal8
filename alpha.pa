/-------------------------------------------------------
/       ALPHA
/       TEST KEYBOARD INPUT
/       USES PDP-8/E BSW
/-------------------------------------------------------
        *200
        MONADR=7600
START,  CLA CLL
        TAD     MSGADR  /LOAD MESSAGE
        JMS     PRINT   /PRINT IT
        KCF             /CLEAR KEYBOARD FLAG
LOOP,   KSF             /WAIT FOR INPUT
        JMP     .-1     /LOOP
        KRB             /READ KEYBOARD
        TAD     CNESC   /ADD NEGATIVE ESC VALUE
        SNA             /SKIP NEXT IF NOT ESC
        JMP I   MON     /RETURN TO OS
        TAD     ADJUST  /RESTORE AC AND MAKE 8 BIT
        JMS     ATOC    /CONVERT AND ASCII IN BUFF AT AC
        JMS     PRINT   /PRINT THE VALUE
        JMP     LOOP    /GET NEXT CHAR
ADJUST, 0233            /ESC + 200 FOR 6 TO 8 BIT ASCII
CNESC,  -0033           /NEGATIVE ESCAPE 6-BIT CODE
MSGADR, MSG
MON,    MONADR          /LOCATION TO RETURN
MSG,    0215;0212;
        "T;"Y;"P;"E;" ;"S;"O;"M;"E;"T;"H;"I;"N;"G;":;0;

/-------------------------------------------------------
/       PRINT
/       NULL-TERMINATED BUFFER IN AC
/-------------------------------------------------------
PRINT,  0
        DCA     PBUFF   /SET POINTER BUFFER
        TLS             /LOAD TELEPRINTER
NEXT,   TSF             /SKIP IF FLAG = 1 (CHAR PRINTED)
        JMP     .-1     /WAIT LOOP
        TAD I   PBUFF   /AC TO BUFFER
        TLS             /LOAD TELEPRINTER
        ISZ     PBUFF   /INCREMENT BUFFER POINTER
        CLA		CLL
        TAD I   PBUFF   /NEXT CHAR IN BUFFER TO ACPNTR
        SZA		CLA
        JMP		NEXT
        JMP I	PRINT
PBUFF,  0               /POINTER BUFFER

/-------------------------------------------------------
/ACCUMULATOR TO ASCII
/-------------------------------------------------------

ATOC,   0
        DCA     VAR     /MOVE AC TO VAR
        TAD     B2ADR	/GET BUFFER ADDRESS
        DCA     PNTR	/STORE IT IN THE POINTER
        TAD     VAR     /RESTORE THE AC
        RTL; RTL        /HIGH 3 BITS NOW LOW 3
        JMS     PROC    /PROCESS THE LOW 3
        BSW             /NEXT 3 TO LOW 3
        JMS     PROC	/PROCESS IT
        RTR; RAR        /NEXT 3
        JMS     PROC	/PROCESS IT
        JMS     PROC    /FINAL LOW 3
        CLA CLL         /CLEAR AC AND LINK
        DCA I	PNTR	/ADD A ZERO AT THE END
        TAD		BUFFAD	/PUT THE BUFFER ADDR IN AC
        JMP I	ATOC	/RETURN

/CONVERT VALUE IN AC TO ASCII, STORE IT, AND INC POINTER
PROC,   0
        AND     C0007   /ISOLATE LOW 3 BITS
        TAD     C0260   /ADD 260 TO MAKE ASCII
        DCA I	PNTR	/PUT VALUE AT PNTR
        ISZ		PNTR	/INCREMENT PTR
        NOP
        CLA CLL         /CLEAR AC
        TAD		VAR		/RESTORE AC
        JMP I	PROC	/RETURN

C0007,  0007			/BIT MASK FOR LOW 3 BITS
C0260,  0260			/VALUE TO CONVERT NUMBER TO ASCII
PNTR,   0               /POINTER
VAR,    0				/TEMP VAR TO HOLD AC
BUFFAD, BUFF			/ADDRESS OF BUFFER
B2ADR,  BUF2			/ADDRESS AFTER CRLF
BUFF,   0215            /CR
        0212            /LF
BUF2,   0;0;0;0;0       /BUFFER FOR ASCII CHARACTER

