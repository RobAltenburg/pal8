/----------------------------------------
/	COMMAND
/	COMMAND DECODER TEST
/----------------------------------------

	MONADR=7600

	*200
	// USRIN
START,	CDF	0
	CIF	10
	JMS I	(7700
	10

	// DECODE
DECODE,	CDF	0	/SET DATA FIELD TO CURRENT
	CIF	10	/INSTRUCTION FIELD MUST BE 1
	JMS I	(200	/CALL USR
	5		/DECODE.FUNCTION = 5
	2001		/ARG(1), ASSUMED INPUT EXTENSION
	0		/ARG(2), ZERO TO PRESERVE
			/ALL TENTATIVE FILES
			/NORMAL RETURN
	
	// ---- TABLES NOW SET UP IN FIELD 1 ----
	// OUTPUT	7600
	// INPUT	7617
	// OPTIONS	7642
	//----------------------------------------

	CLA CLL		/GET DEVICE NUMBER
	CDF 10
	TAD I	(7617

	// FETCH THE DEVICE HANDLER
	CDF	0
	CIF	10
	JMS I	(200
	1
DEVHDL,	6001
	JMP	USROUT	/EXIT ON ERROR

	CLA
	TAD	DEVHDL		
	JMS	ATOC
	JMS	PRINT	

USROUT,	CDF	0
	CIF	10
	JMS I	(0200
	11

	JMP I	(MONADR	/RETURN TO OS
	
/-------------------------------------------------------
/       PRINT
/       NULL-TERMINATED BUFFER IN AC
/-------------------------------------------------------
PRINT,  0
        DCA     PBUFF   /SET POINTER BUFFER
        TLS             /LOAD TELEPRINTER
NEXT,   TSF             /SKIP IF FLAG = 1 (CHAR PRINTED)
        JMP     .-1     /WAIT LOOP
        TAD I   PBUFF   /AC TO BUFFER
        TLS             /LOAD TELEPRINTER
        ISZ     PBUFF   /INCREMENT BUFFER POINTER
        CLA		CLL
        TAD I   PBUFF   /NEXT CHAR IN BUFFER TO ACPNTR
        SZA		CLA
        JMP		NEXT
        JMP I	PRINT
PBUFF,  0               /POINTER BUFFER

/-------------------------------------------------------
/ACCUMULATOR TO ASCII
/-------------------------------------------------------

ATOC,   0
        DCA     VAR     /MOVE AC TO VAR
        TAD     B2ADR	/GET BUFFER ADDRESS
        DCA     PNTR	/STORE IT IN THE POINTER
        TAD     VAR     /RESTORE THE AC
        RTL; RTL        /HIGH 3 BITS NOW LOW 3
        JMS     PROC    /PROCESS THE LOW 3
        BSW             /NEXT 3 TO LOW 3
        JMS     PROC	/PROCESS IT
        RTR; RAR        /NEXT 3
        JMS     PROC	/PROCESS IT
        JMS     PROC    /FINAL LOW 3
        CLA CLL         /CLEAR AC AND LINK
        DCA I	PNTR	/ADD A ZERO AT THE END
        TAD		BUFFAD	/PUT THE BUFFER ADDR IN AC
        JMP I	ATOC	/RETURN

/CONVERT VALUE IN AC TO ASCII, STORE IT, AND INC POINTER
PROC,   0
        AND     C0007   /ISOLATE LOW 3 BITS
        TAD     C0060   /ADD 060 TO MAKE ASCII
        DCA I	PNTR	/PUT VALUE AT PNTR
        ISZ		PNTR	/INCREMENT PTR
        NOP
        CLA CLL         /CLEAR AC
        TAD		VAR		/RESTORE AC
        JMP I	PROC	/RETURN

C0007,  0007			/BIT MASK FOR LOW 3 BITS
C0060,  0060			/VALUE TO CONVERT NUMBER TO ASCII
PNTR,   0               /POINTER
VAR,    0				/TEMP VAR TO HOLD AC
BUFFAD, BUFF			/ADDRESS OF BUFFER
B2ADR,  BUF2			/ADDRESS AFTER CRLF
BUFF,   0215            /CR
        0212            /LF
BUF2,   0;0;0;0;0       /BUFFER FOR ASCII CHARACTER

