/-------------------------------------------------------
/	BLINK
/	RANDOMLY BLINK LIGHTS ON DISPLAY
/	USES PDP-8/E EAE 
/-------------------------------------------------------
	*200
	MONADR=7600
START,	CLA CLL
	TAD	MSGADR	/LOAD MSG ON HOW TO EXIT 
	JMS	PRINT	/PRINT IT
	KCF		/CLEAR KEYBOARD FLAG
LOOP,	KSF		/WAIT FOR INPUT
	JMP	RAND	/GENERATE RANDOM NUMBER ON LOOP
	KRB		/READ KEYBOARD
	TAD	CNESC	/ADD NEGATIVE ESC VALUE
	SNA		/SKIP NEXT IF NOT ESC
	JMP I	MON	/RETURN TO OS
	JMP	LOOP	/BAD KEY, LOOP AGAIN
RAND,	JMS	GETRAN	/GEN A RANDOM NUMBER
	DCA	COUNT1	/RANDOMIZE DELAY
	TAD	COUNT1	/SET LIGHTS ON AC
WAIT1,	ISZ	COUNT1	/INCREMENT COUNTER
	JMP	WAIT2	/STEP COUNTER
	JMP	LOOP	/GET NEXT CHAR
WAIT2,	ISZ	COUNT2	/STEP COUNTER 2
	JMP	WAIT2	/STEP COUNTER
	JMP	WAIT1	/NEXT COUNT
COUNT1, 0		/COUNTER VARIABLE
COUNT2, 0		/COUNTER VARIABLE
CNESC,	-0033		/NEGATIVE ESCAPE 6-BIT CODE
MSGADR, MSG
MON,	MONADR		/LOCATION TO RETURN
MSG,	0215;0212;"E;"S;"C;" ;"T;"O;" ;"S;"T;"O;"P;">;0;

/-------------------------------------------------------
/	GET RANDOM NUMBER
/       USES EAE OPCODES, NOT PORTABLE
/       RANDOM ALGORITHM FROM GRC.COM
/       LASTRAN = LASTRAN * 2917 + 353
/-------------------------------------------------------

GETRAN, 0
	7447		/SWBA MODE B TO A
	TAD	LSTRAN	/LAST RANDOM NUMBER 
	7405		/MUY MULTIPLY FOLLOWING
	5545		/2917 BASE 10  
	TAD	CRAND	/SUM ADDEND
	DCA	LSTRAN	/SAVE IT FOR NEXT TIME
	TAD	LSTRAN	/RETURN IT
	JMP I	GETRAN	/RETURN
LSTRAN, 0
CRAND,	0541		/ 353 BASE 10
ACHIGH, 0

/-------------------------------------------------------
/	PRINT
/	EXPECTS NULL-TERMINATED BUFFER IN AC
/-------------------------------------------------------

PRINT,	0
	DCA	PBUFF	/SET POINTER BUFFER
	TLS		/LOAD TELEPRINTER
NEXT,	TSF		/SKIP IF FLAG = 1 (CHAR PRINTED)
	JMP	.-1	/WAIT LOOP
	TAD I	PBUFF	/AC TO BUFFER
	TLS		/LOAD TELEPRINTER
	ISZ	PBUFF	/INCREMENT BUFFER POINTER
	CLA		CLL
	TAD I	PBUFF	/NEXT CHAR IN BUFFER TO ACPNTR
	SZA		CLA
	JMP		NEXT
	JMP I	PRINT
PBUFF,	0		/POINTER BUFFER
 
